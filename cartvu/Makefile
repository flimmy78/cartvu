#############################################################################
# Makefile for building: cartvu
# Generated by qmake (2.01a) (Qt 4.7.0) on: Fri Jun 13 18:09:23 2014
# Project:  cartvu.pro
# Template: app
# Command: /mnt/add_disk/qt-everywhere-target/bin/s5pv210_qmake -o Makefile cartvu.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gcc
CXX           = arm-linux-g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/mnt/add_disk/qt-everywhere-target/mkspecs/qws/linux-arm-g++ -I. -I/mnt/add_disk/qt-everywhere-target/include/QtCore -I/mnt/add_disk/qt-everywhere-target/include/QtNetwork -I/mnt/add_disk/qt-everywhere-target/include/QtGui -I/mnt/add_disk/qt-everywhere-target/include/QtXml -I/mnt/add_disk/qt-everywhere-target/include/QtSql -I/mnt/add_disk/qt-everywhere-target/include -I. -I. -I. -I/work_place/tslib-master/include
LINK          = arm-linux-g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/mnt/add_disk/qt-everywhere-target/lib
LIBS          = $(SUBLIBS)  -L/work_place/tslib-master/lib -L/mnt/add_disk/qt-everywhere-target/lib -ljpeg -L/work_place/jpeg-8b/tmp/lib -lcrypt -lQtSql -L/work_place/tslib-master/lib -L/mnt/add_disk/qt-everywhere-target/lib -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = arm-linux-ar cqs
RANLIB        = 
QMAKE         = /mnt/add_disk/qt-everywhere-target/bin/s5pv210_qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-linux-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = camThread.cpp \
		cartvu.cpp \
		client.cpp \
		config_setting.cpp \
		config_sys.cpp \
		ftpput.cpp \
		light.cpp \
		login.cpp \
		main.cpp \
		MyInputPanel.cpp \
		MyInputPannelContext.cpp \
		read_sys.cpp \
		revolveMode.cpp \
		sensor.cpp \
		serialMode.cpp \
		setting.cpp \
		synchTime.cpp \
		watchdog.cpp moc_camThread.cpp \
		moc_cartvu.cpp \
		moc_client.cpp \
		moc_config_setting.cpp \
		moc_ftpput.cpp \
		moc_light.cpp \
		moc_login.cpp \
		moc_MyInputPanel.cpp \
		moc_MyInputPannelContext.cpp \
		moc_read_sys.cpp \
		moc_revolveMode.cpp \
		moc_sensor.cpp \
		moc_serialMode.cpp \
		moc_setting.cpp \
		moc_synchTime.cpp \
		moc_watchdog.cpp \
		qrc_photo.cpp
OBJECTS       = camThread.o \
		cartvu.o \
		client.o \
		config_setting.o \
		config_sys.o \
		ftpput.o \
		light.o \
		login.o \
		main.o \
		MyInputPanel.o \
		MyInputPannelContext.o \
		read_sys.o \
		revolveMode.o \
		sensor.o \
		serialMode.o \
		setting.o \
		synchTime.o \
		watchdog.o \
		moc_camThread.o \
		moc_cartvu.o \
		moc_client.o \
		moc_config_setting.o \
		moc_ftpput.o \
		moc_light.o \
		moc_login.o \
		moc_MyInputPanel.o \
		moc_MyInputPannelContext.o \
		moc_read_sys.o \
		moc_revolveMode.o \
		moc_sensor.o \
		moc_serialMode.o \
		moc_setting.o \
		moc_synchTime.o \
		moc_watchdog.o \
		qrc_photo.o
DIST          = /mnt/add_disk/qt-everywhere-target/mkspecs/common/g++.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/common/unix.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/common/linux.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/common/qws.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/qconfig.pri \
		/mnt/add_disk/qt-everywhere-target/mkspecs/modules/qt_webkit_version.pri \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt_functions.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt_config.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/exclusive_builds.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/default_pre.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/release.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/default_post.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/warn_on.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/unix/thread.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/moc.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/resources.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/uic.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/yacc.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/lex.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/include_source_dir.prf \
		cartvu.pro
QMAKE_TARGET  = cartvu
DESTDIR       = 
TARGET        = cartvu

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_cartvu.h ui_config_setting.h ui_login.h ui_MyInputPanelForm.h ui_revolveMode.h ui_serialMode.h ui_setting.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: cartvu.pro  /mnt/add_disk/qt-everywhere-target/mkspecs/qws/linux-arm-g++/qmake.conf /mnt/add_disk/qt-everywhere-target/mkspecs/common/g++.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/common/unix.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/common/linux.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/common/qws.conf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/qconfig.pri \
		/mnt/add_disk/qt-everywhere-target/mkspecs/modules/qt_webkit_version.pri \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt_functions.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt_config.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/exclusive_builds.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/default_pre.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/release.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/default_post.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/warn_on.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/unix/thread.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/moc.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/resources.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/uic.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/yacc.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/lex.prf \
		/mnt/add_disk/qt-everywhere-target/mkspecs/features/include_source_dir.prf \
		/mnt/add_disk/qt-everywhere-target/lib/libQtSql.prl \
		/mnt/add_disk/qt-everywhere-target/lib/libQtCore.prl \
		/mnt/add_disk/qt-everywhere-target/lib/libQtXml.prl \
		/mnt/add_disk/qt-everywhere-target/lib/libQtGui.prl \
		/mnt/add_disk/qt-everywhere-target/lib/libQtNetwork.prl
	$(QMAKE) -o Makefile cartvu.pro
/mnt/add_disk/qt-everywhere-target/mkspecs/common/g++.conf:
/mnt/add_disk/qt-everywhere-target/mkspecs/common/unix.conf:
/mnt/add_disk/qt-everywhere-target/mkspecs/common/linux.conf:
/mnt/add_disk/qt-everywhere-target/mkspecs/common/qws.conf:
/mnt/add_disk/qt-everywhere-target/mkspecs/qconfig.pri:
/mnt/add_disk/qt-everywhere-target/mkspecs/modules/qt_webkit_version.pri:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt_functions.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt_config.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/exclusive_builds.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/default_pre.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/release.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/default_post.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/warn_on.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/qt.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/unix/thread.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/moc.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/resources.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/uic.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/yacc.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/lex.prf:
/mnt/add_disk/qt-everywhere-target/mkspecs/features/include_source_dir.prf:
/mnt/add_disk/qt-everywhere-target/lib/libQtSql.prl:
/mnt/add_disk/qt-everywhere-target/lib/libQtCore.prl:
/mnt/add_disk/qt-everywhere-target/lib/libQtXml.prl:
/mnt/add_disk/qt-everywhere-target/lib/libQtGui.prl:
/mnt/add_disk/qt-everywhere-target/lib/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile cartvu.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/cartvu1.0.0 || $(MKDIR) .tmp/cartvu1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/cartvu1.0.0/ && $(COPY_FILE) --parents camThread.h cartvu.h client.h config_setting.h config_sys.h ftpput.h jpeglib.h light.h login.h MyInputPanel.h MyInputPannelContext.h read_sys.h revolveMode.h sensor.h serialMode.h setting.h synchTime.h ui_cartvuMode.h ui_selfMode.h videodev2_samsung.h watchdog.h recordLog.h strseparate.h .tmp/cartvu1.0.0/ && $(COPY_FILE) --parents photo.qrc .tmp/cartvu1.0.0/ && $(COPY_FILE) --parents camThread.cpp cartvu.cpp client.cpp config_setting.cpp config_sys.cpp ftpput.cpp light.cpp login.cpp main.cpp MyInputPanel.cpp MyInputPannelContext.cpp read_sys.cpp revolveMode.cpp sensor.cpp serialMode.cpp setting.cpp synchTime.cpp watchdog.cpp .tmp/cartvu1.0.0/ && $(COPY_FILE) --parents cartvu.ui config_setting.ui login.ui MyInputPanelForm.ui revolveMode.ui serialMode.ui setting.ui .tmp/cartvu1.0.0/ && (cd `dirname .tmp/cartvu1.0.0` && $(TAR) cartvu1.0.0.tar cartvu1.0.0 && $(COMPRESS) cartvu1.0.0.tar) && $(MOVE) `dirname .tmp/cartvu1.0.0`/cartvu1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/cartvu1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_camThread.cpp moc_cartvu.cpp moc_client.cpp moc_config_setting.cpp moc_ftpput.cpp moc_light.cpp moc_login.cpp moc_MyInputPanel.cpp moc_MyInputPannelContext.cpp moc_read_sys.cpp moc_revolveMode.cpp moc_sensor.cpp moc_serialMode.cpp moc_setting.cpp moc_synchTime.cpp moc_watchdog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_camThread.cpp moc_cartvu.cpp moc_client.cpp moc_config_setting.cpp moc_ftpput.cpp moc_light.cpp moc_login.cpp moc_MyInputPanel.cpp moc_MyInputPannelContext.cpp moc_read_sys.cpp moc_revolveMode.cpp moc_sensor.cpp moc_serialMode.cpp moc_setting.cpp moc_synchTime.cpp moc_watchdog.cpp
moc_camThread.cpp: config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		camThread.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) camThread.h -o moc_camThread.cpp

moc_cartvu.cpp: camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		cartvu.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) cartvu.h -o moc_cartvu.cpp

moc_client.cpp: client.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) client.h -o moc_client.cpp

moc_config_setting.cpp: setting.h \
		serialMode.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		config_setting.h \
		MyInputPannelContext.h \
		config_setting.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) config_setting.h -o moc_config_setting.cpp

moc_ftpput.cpp: read_sys.h \
		recordLog.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		setting.h \
		light.h \
		config_setting.h \
		MyInputPannelContext.h \
		client.h \
		ftpput.h \
		synchTime.h \
		ftpput.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) ftpput.h -o moc_ftpput.cpp

moc_light.cpp: light.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) light.h -o moc_light.cpp

moc_login.cpp: camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		sensor.h \
		login.h \
		client.h \
		read_sys.h \
		recordLog.h \
		synchTime.h \
		light.h \
		ftpput.h \
		serialMode.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		login.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) login.h -o moc_login.cpp

moc_MyInputPanel.cpp: ui_MyInputPanelForm.h \
		MyInputPanel.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) MyInputPanel.h -o moc_MyInputPanel.cpp

moc_MyInputPannelContext.cpp: MyInputPannelContext.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) MyInputPannelContext.h -o moc_MyInputPannelContext.cpp

moc_read_sys.cpp: recordLog.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		read_sys.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		read_sys.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) read_sys.h -o moc_read_sys.cpp

moc_revolveMode.cpp: camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		sensor.h \
		login.h \
		revolveMode.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		revolveMode.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) revolveMode.h -o moc_revolveMode.cpp

moc_sensor.cpp: config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		sensor.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		sensor.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) sensor.h -o moc_sensor.cpp

moc_serialMode.cpp: sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		serialMode.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) serialMode.h -o moc_serialMode.cpp

moc_setting.cpp: serialMode.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		setting.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) setting.h -o moc_setting.cpp

moc_synchTime.cpp: config_sys.h \
		watchdog.h \
		synchTime.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) synchTime.h -o moc_synchTime.cpp

moc_watchdog.cpp: watchdog.h
	/mnt/add_disk/qt-everywhere-target/bin/moc $(DEFINES) $(INCPATH) watchdog.h -o moc_watchdog.cpp

compiler_rcc_make_all: qrc_photo.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_photo.cpp
qrc_photo.cpp: photo.qrc \
		keyboard.xml \
		img/down.png \
		img/up.png \
		img/right.png \
		img/left.png \
		pic/bt9_up.png \
		pic/logout_down.png \
		pic/log_frame.jpg \
		pic/bt7_down.png \
		pic/bt3_up.png \
		pic/colon_up.png \
		pic/favicon.ico \
		pic/list_up.png \
		pic/tick.png \
		pic/bt5_up.png \
		pic/btac.png \
		pic/minus_down.png \
		pic/bt4_down.png \
		pic/btdel_down.png \
		pic/check_green_down.png \
		pic/bt8_down.png \
		pic/cancel_down.png \
		pic/start_logo.png \
		pic/log_down.png \
		pic/dot_down.png \
		pic/check_green_up.png \
		pic/cancel-button.png \
		pic/bt0_up.png \
		pic/serial_bak.png \
		pic/titil.png \
		pic/bt0_down.png \
		pic/btdel_up.png \
		pic/bt5_down.png \
		pic/log_bk.png \
		pic/bt6_up.png \
		pic/bt9_down.png \
		pic/config_setting.png \
		pic/bt8_up.png \
		pic/logout.png \
		pic/log_up.png \
		pic/bt2_up.png \
		pic/logout_up.png \
		pic/minus_up.png \
		pic/bt4_up.png \
		pic/check_red.png \
		pic/check_yellow.png \
		pic/btac_down.png \
		pic/zero.png \
		pic/bt1_down.png \
		pic/list_down.png \
		pic/standby.png \
		pic/bt2_down.png \
		pic/dot_up.png \
		pic/colon_down.png \
		pic/bt6_down.png \
		pic/reset_down.png \
		pic/serial_bg_pic.jpg \
		pic/bt1_up.png \
		pic/reset_up.png \
		pic/login.png \
		pic/btac_up.png \
		pic/bt7_up.png \
		pic/bt3_down.png \
		pic/cancel_up.png
	/mnt/add_disk/qt-everywhere-target/bin/rcc -name photo photo.qrc -o qrc_photo.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_cartvu.h ui_config_setting.h ui_login.h ui_MyInputPanelForm.h ui_revolveMode.h ui_serialMode.h ui_setting.h
compiler_uic_clean:
	-$(DEL_FILE) ui_cartvu.h ui_config_setting.h ui_login.h ui_MyInputPanelForm.h ui_revolveMode.h ui_serialMode.h ui_setting.h
ui_cartvu.h: cartvu.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic cartvu.ui -o ui_cartvu.h

ui_config_setting.h: config_setting.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic config_setting.ui -o ui_config_setting.h

ui_login.h: login.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic login.ui -o ui_login.h

ui_MyInputPanelForm.h: MyInputPanelForm.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic MyInputPanelForm.ui -o ui_MyInputPanelForm.h

ui_revolveMode.h: revolveMode.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic revolveMode.ui -o ui_revolveMode.h

ui_serialMode.h: serialMode.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic serialMode.ui -o ui_serialMode.h

ui_setting.h: setting.ui
	/mnt/add_disk/qt-everywhere-target/bin/uic setting.ui -o ui_setting.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

camThread.o: camThread.cpp camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		sensor.h \
		login.h \
		revolveMode.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o camThread.o camThread.cpp

cartvu.o: cartvu.cpp cartvu.h \
		camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		ui_cartvu.h \
		login.h \
		revolveMode.h \
		sensor.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cartvu.o cartvu.cpp

client.o: client.cpp client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o client.cpp

config_setting.o: config_setting.cpp config_setting.h \
		setting.h \
		serialMode.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		MyInputPannelContext.h \
		ui_config_setting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o config_setting.o config_setting.cpp

config_sys.o: config_sys.cpp config_sys.h \
		watchdog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o config_sys.o config_sys.cpp

ftpput.o: ftpput.cpp ftpput.h \
		read_sys.h \
		recordLog.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		setting.h \
		light.h \
		config_setting.h \
		MyInputPannelContext.h \
		client.h \
		synchTime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ftpput.o ftpput.cpp

light.o: light.cpp light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o light.o light.cpp

login.o: login.cpp login.h \
		camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		sensor.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		ui_login.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o login.o login.cpp

main.o: main.cpp strseparate.h \
		recordLog.h \
		recordLog.inc \
		watchdog.h \
		MyInputPannelContext.h \
		config_sys.h \
		read_sys.h \
		sensor.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		setting.h \
		light.h \
		config_setting.h \
		client.h \
		ftpput.h \
		synchTime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

MyInputPanel.o: MyInputPanel.cpp MyInputPanel.h \
		ui_MyInputPanelForm.h \
		MyInputPannelContext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MyInputPanel.o MyInputPanel.cpp

MyInputPannelContext.o: MyInputPannelContext.cpp MyInputPannelContext.h \
		MyInputPanel.h \
		ui_MyInputPanelForm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MyInputPannelContext.o MyInputPannelContext.cpp

read_sys.o: read_sys.cpp read_sys.h \
		recordLog.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		setting.h \
		light.h \
		config_setting.h \
		MyInputPannelContext.h \
		client.h \
		ftpput.h \
		synchTime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o read_sys.o read_sys.cpp

revolveMode.o: revolveMode.cpp revolveMode.h \
		camThread.h \
		config_sys.h \
		watchdog.h \
		jpeglib.h \
		videodev2_samsung.h \
		sensor.h \
		login.h \
		client.h \
		read_sys.h \
		recordLog.h \
		synchTime.h \
		light.h \
		ftpput.h \
		serialMode.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		ui_revolveMode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o revolveMode.o revolveMode.cpp

sensor.o: sensor.cpp sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		serialMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sensor.o sensor.cpp

serialMode.o: serialMode.cpp serialMode.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		setting.h \
		config_setting.h \
		MyInputPannelContext.h \
		ui_serialMode.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o serialMode.o serialMode.cpp

setting.o: setting.cpp setting.h \
		serialMode.h \
		sensor.h \
		config_sys.h \
		watchdog.h \
		login.h \
		camThread.h \
		jpeglib.h \
		videodev2_samsung.h \
		revolveMode.h \
		read_sys.h \
		recordLog.h \
		client.h \
		synchTime.h \
		light.h \
		ftpput.h \
		config_setting.h \
		MyInputPannelContext.h \
		ui_setting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setting.o setting.cpp

synchTime.o: synchTime.cpp synchTime.h \
		config_sys.h \
		watchdog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o synchTime.o synchTime.cpp

watchdog.o: watchdog.cpp watchdog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o watchdog.o watchdog.cpp

moc_camThread.o: moc_camThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_camThread.o moc_camThread.cpp

moc_cartvu.o: moc_cartvu.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_cartvu.o moc_cartvu.cpp

moc_client.o: moc_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_client.o moc_client.cpp

moc_config_setting.o: moc_config_setting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_config_setting.o moc_config_setting.cpp

moc_ftpput.o: moc_ftpput.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ftpput.o moc_ftpput.cpp

moc_light.o: moc_light.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_light.o moc_light.cpp

moc_login.o: moc_login.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_login.o moc_login.cpp

moc_MyInputPanel.o: moc_MyInputPanel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MyInputPanel.o moc_MyInputPanel.cpp

moc_MyInputPannelContext.o: moc_MyInputPannelContext.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MyInputPannelContext.o moc_MyInputPannelContext.cpp

moc_read_sys.o: moc_read_sys.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_read_sys.o moc_read_sys.cpp

moc_revolveMode.o: moc_revolveMode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_revolveMode.o moc_revolveMode.cpp

moc_sensor.o: moc_sensor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sensor.o moc_sensor.cpp

moc_serialMode.o: moc_serialMode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_serialMode.o moc_serialMode.cpp

moc_setting.o: moc_setting.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_setting.o moc_setting.cpp

moc_synchTime.o: moc_synchTime.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_synchTime.o moc_synchTime.cpp

moc_watchdog.o: moc_watchdog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_watchdog.o moc_watchdog.cpp

qrc_photo.o: qrc_photo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_photo.o qrc_photo.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

